{"version":3,"sources":["../../../test/spec/generator/index.js"],"names":["generatorTestSuite","context","snapshotContext","api","start","t","url","middleware","function","app","ctx","type","body","req","config","use","pages","sitemap","expected","snapshot","routesJsx","snapshotDir","test","setDir","router","koa2Jsx","wireframe","map","defaultImports","routes","get","actual"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;AAHmE;AAClB;;AAIjD;;;AAGA,MAAMA,qBAAqB;AACzBC,WAAS,CAAEA,gBAAF,EAAWC,wBAAX,CADgB;;AAEzB,QAAM,qBAAN,CAA4BC,GAA5B,EAAiC;AAC/B,UAAM;AAAEC;AAAF,QAAYD,GAAlB;AACA,UAAME,IAAI,KAAV;AACA,UAAM;AAAEC;AAAF,QAAU,MAAMF,MAAM;AAC1BG,kBAAY;AACV,kBAAU;AACR,gBAAMC,QAAN,CAAeC,GAAf,EAAoB;AAAEJ;AAAF,WAApB,EAA2B;AACzB,mBAAO,MAAOK,GAAP,IAAe;AACpBA,kBAAIC,IAAJ,GAAW,YAAX;AACAD,kBAAIE,IAAJ,GAAY,GAAEP,CAAE,OAAMK,IAAIG,GAAJ,CAAQP,GAAI,EAAlC;AACD,aAHD;AAID,WANO;;AAORQ,kBAAQ;AAAET;AAAF,WAPA;AAQRU,eAAK;AARG;AADA;AADc,KAAN,CAAtB;AAcA,UAAMC,QAAQ;AAAC,eAAS,EAAV;AAAc,gBAAU;AAAxB,KAAd;AACA,UAAMC,UAAU,MAAM,wBAAUX,GAAV,EAAeU,KAAf,CAAtB,CAlB+B,CAmB/B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,UAAME,WAAW;AACf,eAAU,GAAEb,CAAE,WADC;AAEf,gBAAW,GAAEA,CAAE,YAFA,CAIjB;;AAJiB,KAAjB;AAKA,2BAAUY,OAAV,EAAmBC,QAAnB;AACD,GAlCwB;;AAmCzB;;;;AAIA,QAAM,yBAAN,CAAgCf,GAAhC,EAAqCgB,QAArC,EAA+C;AAC7C,UAAM;AAAEf,WAAF;AAASgB,eAAT;AAAoBC;AAApB,QAAoClB,GAA1C;AACA,UAAM;AAAEmB,UAAF;AAAQC;AAAR,QAAmBJ,QAAzB;AACAI,WAAOF,WAAP;AACA,UAAM;AAAEZ,SAAF;AAAOH,SAAP;AAAYkB;AAAZ,QAAuB,MAAMpB,MAAM;AACvCG,kBAAY;AACVkB,iBAAS;AACPC,qBAAW,IADJ;AAEPX,eAAK,IAFE;AAGPD,kBAAQ;AAHD;AADC;AAD2B,KAAN,CAAnC;AAWA,UAAMa,MAAM,MAAM,uBAAWP,SAAX,EAAsBI,MAAtB,EAA8B;AAC9CI,sBAAgB;AAD8B,KAA9B,CAAlB;AAGAnB,QAAIM,GAAJ,CAAQS,OAAOK,MAAP,EAAR;AACA,UAAM;AAAEC;AAAF,QAAUH,GAAhB;AACA,UAAMI,SAAS,MAAM,wBAAUzB,GAAV,EAAewB,GAAf,CAArB;AACA,UAAMR,KAAK,qBAAL,EAA4BS,MAA5B,CAAN;AACD;;AA7DwB,CAA3B;eAgEe/B,kB","sourcesContent":["import { deepEqual } from 'zoroaster/assert'\nimport snapshotContext, { SnapshotContext} from 'snapshot-context' // eslint-disable-line\nimport context, { Context } from '../../context' // eslint-disable-line no-unused-vars\nimport generator from '../../../src/generator'\nimport { initRoutes } from '../../../src'\n\n/**\n * @type {Object.<string, (api: Context, sApi: SnapshotContext)>}\n */\nconst generatorTestSuite = {\n  context: [ context, snapshotContext ],\n  async 'generates a website'(api) {\n    const { start } = api\n    const t = 'abc'\n    const { url } = await start({\n      middleware: {\n        'a page': {\n          async function(app, { t }) {\n            return async (ctx) => {\n              ctx.type = 'text/plain'\n              ctx.body = `${t} :: ${ctx.req.url}`\n            }\n          },\n          config: { t },\n          use: true,\n        },\n      },\n    })\n    const pages = {'/test': [], '/test2': []}\n    const sitemap = await generator(url, pages)\n    // const expected = Object.keys(pages).reduce((acc, key) => {\n    //   const value = pages[key]\n    //   return {\n    //     ...acc,\n    //     [p]: `${t} :: ${p}`,\n    //   }\n    // }, {})\n    const expected = {\n      '/test': `${t} :: /test`,\n      '/test2': `${t} :: /test2`,\n    }\n    // deepEqual(expected, expectedByHand)\n    deepEqual(sitemap, expected)\n  },\n  /**\n   * @param {Context} api\n   * @param {SnapshotContext} snapshot\n   */\n  async 'generates a JSX website'(api, snapshot) {\n    const { start, routesJsx, snapshotDir } = api\n    const { test, setDir } = snapshot\n    setDir(snapshotDir)\n    const { app, url, router } = await start({\n      middleware: {\n        koa2Jsx: {\n          wireframe: true,\n          use: true,\n          config: {\n\n          },\n        },\n      },\n    })\n    const map = await initRoutes(routesJsx, router, {\n      defaultImports: true,\n    })\n    app.use(router.routes())\n    const { get } = map\n    const actual = await generator(url, get)\n    await test('generator/full.json', actual)\n  },\n}\n\nexport default generatorTestSuite\n"],"file":"index.js"}