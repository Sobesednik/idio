{"version":3,"sources":["../../test/spec/idio.js"],"names":["app","t","context","snapshotContext","_destroy","destroy","routesJsx","snapshotDir","setDir","test","url","methods","router","a","port","autoConnect","middleware","koa2Jsx","wireframe","use","dir","aliases","get","res"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;AAFoE;AAEtB;AAE9C,IAAIA,GAAJ;AACA;;AACA,MAAMC,IAAI;AACRC,WAAQ,CACNA,gBADM,EAENC,wBAFM,EAGN,YAAW;AAAE;AACX,SAAKC,QAAL,GAAgB,MAAM;AACpB,UAAIJ,GAAJ,EAAS;AACPA,YAAIK,OAAJ;AACAL,cAAM,IAAN;AACD;AACF,KALD;AAMD,GAVK,CADA;;AAaR,QAAM,mBAAN,CAA0B;AAAEM,aAAF;AAAaC;AAAb,GAA1B,EAAsD;AAAEC,UAAF;AAAUC;AAAV,GAAtD,EAAwE;AACtED,WAAOD,WAAP;AACA,UAAM;AAAEG,SAAF;AAAOC,aAAP;AAAgBC,YAAhB;AAAwBZ,WAAKa;AAA7B,QAAmC,MAAM,oBAAK;AAClDC,YAAM,CAD4C;AAElDC,mBAAa,KAFqC;AAGlDC,kBAAY;AACVC,iBAAS;AACPC,qBAAW,IADJ;AAEPC,eAAK;AAFE;AADC;AAHsC,KAAL,EAS5C;AACDC,WAAKd,SADJ;AAEDe,eAAS;AACPC,aAAK;AACH,oBAAU,CAAC,GAAD;AADP;AADE;AAFR,KAT4C,CAA/C;AAiBAtB,UAAMa,CAAN;AACA,UAAMU,MAAM,MAAM,kBAAIb,GAAJ,CAAlB;AACA,oBAAG,YAAYD,IAAZ,CAAiBc,GAAjB,CAAH;AACA,oBAAGZ,OAAH;AACA,oBAAGC,MAAH;AACA,UAAMH,KAAK,gBAAL,EAAuBc,GAAvB,CAAN;AACD;;AAtCO,CAAV;eAyCetB,C","sourcesContent":["import { ok } from 'zoroaster/assert'\nimport rqt from 'rqt'\nimport snapshotContext, { SnapshotContext } from 'snapshot-context' // eslint-disable-line no-unused-vars\nimport idio from '../../src'\nimport context, { Context } from '../context' // eslint-disable-line no-unused-vars\n\nlet app\n/** @type {Object.<string, (ctx: Context, sctx: SnapshotContext)>} */\nconst t = {\n  context:[\n    context,\n    snapshotContext,\n    function() { // after each\n      this._destroy = () => {\n        if (app) {\n          app.destroy()\n          app = null\n        }\n      }\n    },\n  ],\n  async 'starts the server'({ routesJsx, snapshotDir }, { setDir, test }) {\n    setDir(snapshotDir)\n    const { url, methods, router, app: a } = await idio({\n      port: 0,\n      autoConnect: false,\n      middleware: {\n        koa2Jsx: {\n          wireframe: true,\n          use: true,\n        },\n      },\n    }, {\n      dir: routesJsx,\n      aliases: {\n        get: {\n          '/index': ['/'],\n        },\n      },\n    })\n    app = a\n    const res = await rqt(url)\n    ok(/MAIN PAGE/.test(res))\n    ok(methods)\n    ok(router)\n    await test('main-page.html', res)\n  },\n}\n\nexport default t\n"],"file":"idio.js"}